Attribute VB_Name = "SpotOSLeg"
Option Explicit


Public Sub testGetOwnshipLegs()
    Debug.Print "testGetOwnshipLegs"

    ' get the data
    Dim osData As Leg
    Set osData = loadOwnship()
    
    If (osData.bearings.Count <> 27241) Then
        Debug.Print "len is wrong:" & osData.bearings.Count
    End If
    
    Const turnThreshold = 5
    
    ' get ready to store results
    Dim osLegs As Legs
    Set osLegs = sliceOwnship(osData, turnThreshold)
    
    
End Sub

Private Function sliceOwnship(osData As Leg, turnThreshold As Double) As Legs
    Dim res As Legs
    Set res = New Legs

    Dim lastSign As Integer
    Dim lastInversion As Long

    Dim lastTime As Long
    Dim lastCourse As Double
    
    Dim runningTotal
        
    Dim inTurn As Boolean
    inTurn = False

    Dim ctr As Long
'    For ctr = 1 To osData.times.Count
    For ctr = 1 To 10000
        Dim thisT As Long
        thisT = osData.times.Item(ctr)
        Dim course As Double
        course = osData.bearings.Item(ctr)
        
      '  Debug.Print course
        
        If (ctr > 1) Then
            Dim deltaTime As Long
            Dim deltaCourse As Double
            
            deltaTime = thisT - lastTime
            deltaCourse = course - lastCourse
        
            ' calculate the diff
            Dim thisBRate As Double
            thisBRate = (deltaCourse) / (deltaTime)
        
            ' calculate the sign
            Dim thisSign As Integer
            thisSign = Sgn(thisBRate)
            
            ' has it changed?
            If (thisSign <> lastSign) Then
                ' are we in a large turn?
                If inTurn Then
                    Debug.Print "       ended at:" & thisT
                    inTurn = False
                End If
                
'                Debug.Print "Inversion at:" & lastInversion & " was:" & lastSign & " total:" & runningTotal
                                    
                ' remember it happened
                lastInversion = thisT
                lastSign = thisSign
                                
                ' and clear the area
                runningTotal = 0
            Else
                ' build up the running total
                runningTotal = runningTotal + Abs(deltaTime * deltaCourse)
                
                ' hey, is this a big turn?
                If (runningTotal > turnThreshold) And Not inTurn Then
                    Debug.Print "Turn started at:" & lastInversion
                    inTurn = True
                End If

            End If
            
        End If
        
        ' ok, capture the state
        lastTime = thisT
        lastCourse = course
       
    Next ctr
    
    Set sliceOwnship = res
End Function


Private Function loadOwnship() As Leg
    Dim res As Leg
    Set res = Factory.createLeg("OS")
    
    Dim rng As Range
    Set rng = ActiveWorkbook.Sheets("Scen1_States").Range("A3:I27243")
    Dim thisR As Range
    For Each thisR In rng.Rows
        Dim elapsed As Long
        elapsed = thisR.Cells(1, 2).value
        Dim course As Double
        course = thisR.Cells(1, 7).value
        
        res.times.add elapsed
        res.bearings.add course
        
    Next thisR
    
    Set loadOwnship = res
    
End Function

